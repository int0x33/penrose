canvas {
   width = 400.
   height = 400.
}

Global {
   scalar atomRadius = 20.
   scalar bondLength = 60.
}

Colors {
   clear = rgba( 0., 0., 0., 0. )
   black = rgba( 0., 0., 0., 1. )
   gray = rgba( .5, .5, .5, 1. )
   white = rgba( 1., 1., 1., 1. )
   red   = rgba( 1., 0., 0., 1. )
   blue  = rgba( 0., 0., 1., 1. )
   darkRed   = rgba( .7, 0., 0., 1. )
   darkBlue  = rgba( 0., 0., .7, 1. )
}

forall Molecule m {
   m.icon = Circle {
      r : Global.atomRadius
      center : (?,?)
      color : Colors.clear
      strokeColor : Colors.clear
      strokeWidth : 2.
   }

   m.background = Circle {
      r : Global.atomRadius * 4.
      center : m.icon.center
      color : rgba( .95, .95, .95, 1. )
      strokeColor : Colors.clear
   }

   -- m.background = Image {
   --    path : "atom.svg"
   --    center : (?,?)
   --    w : 4.*Global.atomRadius
   --    h : 4.*Global.atomRadius
   -- }

   m.text = Text {
      string : m.label
      center : m.icon.center
      color : Colors.black
      fontSize : "14pt"
   }

   layer m.icon below m.text
   layer m.background below m.icon
}

forall Hydrogen a {
   override a.icon.color = Colors.red
   override a.icon.strokeColor = Colors.darkRed
   override a.text.color = Colors.white
   override a.text.string = "\text{H}"
}

forall Carbon a {
   override a.icon.color = Colors.black
   override a.icon.strokeColor = Colors.gray
   override a.text.color = Colors.white
   override a.text.string = "\text{C}"
}

forall Nitrogen a {
   override a.icon.color = Colors.blue
   override a.icon.strokeColor = Colors.darkBlue
   override a.text.color = Colors.white
   override a.text.string = "\text{N}"
}

forall Oxygen a {
   override a.icon.color = Colors.white
   override a.icon.strokeColor = Colors.gray
   override a.text.color = Colors.black
   override a.text.string = "\text{O}"
}

forall Molecule m1; Molecule m2
where SingleBonded( m1, m2 ) {

   x1 = m1.icon.center
   x2 = m2.icon.center
   u = unit(x1-x2)
   r = Global.atomRadius

   shape line = Line {
      start : x1 - 1.3*r*u
        end : x2 + 1.3*r*u
      thickness : 4.
      color : Colors.black
   }

   encourage equal( norm(x1-x2), Global.bondLength )

   layer line below m1.icon
   layer line below m2.icon
   layer m1.background below line
   layer m2.background below line
}

forall Molecule m1; Molecule m2
where DoubleBonded( m1, m2 ) {

   x1 = m1.icon.center
   x2 = m2.icon.center
   u = unit(x1-x2)
   v = ( -u[1], u[0] )
   r = Global.atomRadius

   shape line1 = Line {
      start : x1 - 1.3*r*u - .25*r*v
        end : x2 + 1.3*r*u - .25*r*v
      thickness : 4.
      color : Colors.black
   }

   shape line2 = Line {
      start : x1 - 1.3*r*u + .25*r*v
        end : x2 + 1.3*r*u + .25*r*v
      thickness : 4.
      color : Colors.black
   }

   encourage equal( norm(x1-x2), Global.bondLength )

   layer line1 below m1.icon
   layer line2 below m1.icon
   layer line1 below m2.icon
   layer line2 below m2.icon
   layer m1.background below line1
   layer m2.background below line1
   layer m1.background below line2
   layer m2.background below line2
}

forall Molecule m1; Molecule m2 {
   x1 = m1.icon.center
   x2 = m2.icon.center
   encourage equal( 200000./normsq(x1-x2), 0. )
   layer m1.background below m2.icon
   layer m2.background below m1.icon
}

